"""empty message

Revision ID: fc2869a4885e
Revises: c7b452f40e8c
Create Date: 2020-03-30 11:26:54.837902

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fc2869a4885e'
down_revision = 'c7b452f40e8c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('datastorm_activities')
    op.drop_table('celery_tasksetmeta')
    op.drop_table('activities')
    op.drop_table('celery_taskmeta')
    op.drop_table('activity_history')
    op.drop_index('idx_assets_collection_item_id', table_name='assets')
    op.drop_constraint('assets_collection_item_id_fkey', 'assets', type_='foreignkey')
    op.create_foreign_key(None, 'assets', 'collection_items', ['collection_item_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'assets', type_='foreignkey')
    op.create_foreign_key('assets_collection_item_id_fkey', 'assets', 'collection_items', ['collection_item_id'], ['id'], onupdate='CASCADE')
    op.create_index('idx_assets_collection_item_id', 'assets', ['collection_item_id'], unique=False)
    op.create_table('activity_history',
    sa.Column('activity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('env', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], name='activity_history_activity_id_fkey'),
    sa.ForeignKeyConstraint(['task_id'], ['celery_taskmeta.id'], name='activity_history_task_id_fkey'),
    sa.PrimaryKeyConstraint('activity_id', 'task_id', name='activity_history_pkey')
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
    sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table('activities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('collection_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('activity_type', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('args', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('scene_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sceneid', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], name='activities_collection_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='activities_pkey')
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
    sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
    sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    op.create_table('datastorm_activities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('collection_id', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('activity_type', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('args', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('scene_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sceneid', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('band', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], name='datastorm_activities_collection_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='datastorm_activities_pkey')
    )
    # ### end Alembic commands ###
